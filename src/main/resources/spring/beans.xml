<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="userService" class="com.zkk.test.aop.impl.UserServiceImpl"/>
    <!-- 这个切面也要配置成bean-->
    <bean id="log" class="com.zkk.test.aop.Log"/>
    <!--<aop:config>-->
        <!--&lt;!&ndash;切入点，需要告诉方法在什么去执行-->
        <!--expression="execution(* com.spring.service.impl.*.*(..))"-->
        <!--第一个* 表示所有的返回值，然后就是包名-->
        <!--第二个*表示所有的类对象-->
        <!--第三个*表示类对象所有的方法-->
        <!--第四个*表示所有方法下面的带参数的方法或者是不带参数的方法-->
        <!--&ndash;&gt;-->
        <!--<aop:pointcut expression="execution(* com.zkk.test.aop.impl.*.*(..))" id="pointcut"/>-->
        <!--&lt;!&ndash; 在所有的方法中都切入前置通知&ndash;&gt;-->
        <!--<aop:advisor advice-ref="log" pointcut-ref="pointcut"/>-->
    <!--</aop:config>-->



    <bean id="carTarget" class="com.zkk.test.aop.car.MyCar" />
    <bean id="introduceAdvisor" class="org.springframework.aop.support.DefaultIntroductionAdvisor">
        <constructor-arg>
            <bean class="com.zkk.test.aop.car.IntelligentCar" />
        </constructor-arg>
    </bean>
    <bean id="myCar" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:target-ref="carTarget"
          p:interceptorNames="introduceAdvisor"
          p:proxyTargetClass="true" />


    <bean id="some" class="com.zkk.test.aop.some.Some" />
    <bean id="other" class="com.zkk.test.aop.some.Other" />
    <bean id="otherAdvisor" class="org.springframework.aop.support.DefaultIntroductionAdvisor">
        <constructor-arg ref="other"></constructor-arg>
        <constructor-arg value="com.zkk.test.aop.some.IOther" />
    </bean>
    <bean id="proxyFactoryBean" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces" value="com.zkk.test.aop.some.ISome" />
        <property name="target" ref="some" />
        <property name="interceptorNames">
            <list>
                <value>otherAdvisor</value>
            </list>
        </property>
    </bean>



    <!--对于bean的初始化申明-->
    <bean id="compute_price" class="com.zkk.test.aop.goods.model.impl.Compute_Price"></bean>
    <bean id="otherIntroduction" class="com.zkk.test.aop.goods.OtherIntroduction"></bean>

    <!--给定相应的实例，并且在初始化的时候进行构造函数里面的注入申明-->
    <bean id="otherAdvice" class="org.springframework.aop.support.DefaultIntroductionAdvisor" >
        <constructor-arg ref="otherIntroduction"></constructor-arg>
        <constructor-arg value="com.zkk.test.aop.goods.service.Discount"></constructor-arg>
    </bean>
    <!--代理工厂-->
    <bean id="proxyFactorBean" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces" value="com.zkk.test.aop.goods.model.Amount"></property>
        <property name="target" ref="compute_price"></property>
        <property name="interceptorNames">
            <list>
                <value>otherAdvice</value>
            </list>
        </property>
    </bean>
</beans>